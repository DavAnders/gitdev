// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0
// source: revoked_tokens.sql

package database

import (
	"context"
)

const countRevokedToken = `-- name: CountRevokedToken :one
SELECT COUNT(*)
FROM revoked_tokens
WHERE token = $1
`

func (q *Queries) CountRevokedToken(ctx context.Context, token string) (int64, error) {
	row := q.db.QueryRowContext(ctx, countRevokedToken, token)
	var count int64
	err := row.Scan(&count)
	return count, err
}

const createRevokedToken = `-- name: CreateRevokedToken :one
INSERT INTO revoked_tokens (token)
VALUES ($1)
RETURNING id, token, revoked_at
`

func (q *Queries) CreateRevokedToken(ctx context.Context, token string) (RevokedToken, error) {
	row := q.db.QueryRowContext(ctx, createRevokedToken, token)
	var i RevokedToken
	err := row.Scan(&i.ID, &i.Token, &i.RevokedAt)
	return i, err
}
