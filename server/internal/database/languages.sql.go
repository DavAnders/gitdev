// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0
// source: languages.sql

package database

import (
	"context"

	"github.com/google/uuid"
)

const createLanguage = `-- name: CreateLanguage :one
INSERT INTO languages (id, name)
VALUES ($1, $2) ON CONFLICT (name) DO
UPDATE
SET name = EXCLUDED.name
RETURNING id
`

type CreateLanguageParams struct {
	ID   uuid.UUID
	Name string
}

func (q *Queries) CreateLanguage(ctx context.Context, arg CreateLanguageParams) (uuid.UUID, error) {
	row := q.db.QueryRowContext(ctx, createLanguage, arg.ID, arg.Name)
	var id uuid.UUID
	err := row.Scan(&id)
	return id, err
}
